// ================================
// ANIMASI PEMBUKA: WARISAN NUSANTARA (MODERN GRADIENT)
// by Asrul Radi & ChatGPT
// ================================

PFont fontTitle, fontSub;
float titleAlpha = 0;
float subAlpha = 0;
float titleFadeSpeed = 2.0;
float subFadeSpeed = 1.5;

float cloud1X = 200, cloud2X = 600, cloud3X = 1000;

void setup() {
  size(1280, 720);
  frameRate(30);
  fontTitle = createFont("Arial Bold", 60);
  fontSub = createFont("Arial", 36);
}

void draw() {
  drawOrnament();
  drawRadialSky();
  drawMountainsProfessional();
  drawGrassFieldSimple();
  drawGapura();
  drawTrees();
  drawCloudsProfessional();
  drawBirds();
  drawCharactersProfessional();
  drawTextsSimple();
}

// ==================== ORNAMENT ====================
void drawOrnament() {
  // Ornamen batik/geometris di kiri atas
  pushMatrix();
  translate(40, 40);
  for (int i = 0; i < 3; i++) {
    float s = 32 - i*8;
    stroke(210, 180, 120, 90 - i*20);
    strokeWeight(3-i);
    noFill();
    beginShape();
    for (int a = 0; a < 8; a++) {
      float angle = a*TWO_PI/8.0;
      float r = s + (a%2==0?8:0);
      vertex(cos(angle)*r, sin(angle)*r);
    }
    endShape(CLOSE);
  }
  popMatrix();
  // Ornamen di kanan bawah
  pushMatrix();
  translate(width-40, height-40);
  for (int i = 0; i < 3; i++) {
    float s = 28 - i*7;
    stroke(210, 180, 120, 70 - i*18);
    strokeWeight(2.5-i*0.7);
    noFill();
    beginShape();
    for (int a = 0; a < 6; a++) {
      float angle = a*TWO_PI/6.0;
      float r = s + (a%2==0?6:0);
      vertex(cos(angle)*r, sin(angle)*r);
    }
    endShape(CLOSE);
  }
  popMatrix();
}

// ==================== MODERN RADIAL SKY ====================
void drawRadialSky() {
  // Radial gradient sky
  for (float r = max(width, height); r > 0; r -= 2) {
    float t = map(r, 0, max(width, height), 1, 0);
    color c = lerpColor(color(70, 170, 255), color(255, 255, 255), pow(t, 1.5));
    noStroke();
    fill(c);
    ellipse(width/2, height*0.5, r*2, r*1.2);
  }
}

// ==================== PROFESSIONAL MOUNTAINS ====================
void drawMountainsProfessional() {
  // Gunung belakang (biru muda, landai, halus)
  noStroke();
  beginShape();
  fill(180, 210, 240, 255);
  vertex(0, height*0.62);
  bezierVertex(width*0.18, height*0.50, width*0.32, height*0.60, width*0.5, height*0.54);
  bezierVertex(width*0.68, height*0.48, width*0.82, height*0.60, width, height*0.58);
  vertex(width, height);
  vertex(0, height);
  endShape(CLOSE);

  // Gunung depan (hijau kebiruan, lebih rendah)
  beginShape();
  fill(120, 180, 140, 255);
  vertex(0, height*0.72);
  bezierVertex(width*0.22, height*0.66, width*0.38, height*0.74, width*0.52, height*0.68);
  bezierVertex(width*0.7, height*0.62, width*0.85, height*0.74, width, height*0.70);
  vertex(width, height);
  vertex(0, height);
  endShape(CLOSE);
}

// ==================== MODERN MOUNTAINS ====================
void drawGradientMountainModern(float[] xs, float[] ys, color topCol, color botCol, float shadowAlpha) {
  int topY = int(min(ys));
  int bottomY = height;
  for (int y = topY; y < bottomY; y++) {
    float t = map(y, topY, bottomY, 0, 1);
    color grad = lerpColor(topCol, botCol, t);
    stroke(grad);
    noFill();
    beginShape();
    for (int i = 0; i < xs.length - 1; i++) {
      float x1 = xs[i], y1 = ys[i];
      float x2 = xs[i+1], y2 = ys[i+1];
      if ((y1 <= y && y2 >= y) || (y2 <= y && y1 >= y)) {
        float interX = map(y, y1, y2, x1, x2);
        vertex(interX, y);
      }
    }
    endShape();
  }
  // Shadow effect
  noStroke();
  fill(0, 40 * shadowAlpha);
  beginShape();
  for (int i = 0; i < xs.length; i++) vertex(xs[i], ys[i]+10);
  vertex(width, height);
  vertex(0, height);
  endShape(CLOSE);
  // Main fill
  fill(botCol, 220);
  beginShape();
  for (int i = 0; i < xs.length; i++) vertex(xs[i], ys[i]);
  vertex(width, height);
  vertex(0, height);
  endShape(CLOSE);
}

// ==================== SIMPLE GRASS FIELD (NO ANIMATED GRASS) ====================
void drawGrassFieldSimple() {
  // Tanah hijau gradasi lembut
  noStroke();
  color grassTop = color(120, 200, 120);
  color grassBot = color(60, 140, 60);
  for (int y = int(height*0.75); y < height; y++) {
    float t = map(y, height*0.75, height, 0, 1);
    fill(lerpColor(grassTop, grassBot, t));
    rect(0, y, width, 1);
  }
}

// ==================== GAPURA GERBANG ====================
void drawGapura() {
  float cx = width/2;
  float baseY = height*0.82; // lebih maju ke bawah
  float gapuraW = 370;
  float gapuraH = 140;
  float tiangW = 36;
  float tiangH = 150;
  float atapH = 48;
  // Tiang kiri
  fill(170, 80, 50);
  stroke(90, 40, 20, 220); strokeWeight(5);
  rect(cx-gapuraW/2, baseY-tiangH, tiangW, tiangH, 10);
  // Ornamen garis vertikal di tiang kiri
  stroke(220,180,120,120); strokeWeight(2);
  line(cx-gapuraW/2+tiangW*0.33, baseY-tiangH+10, cx-gapuraW/2+tiangW*0.33, baseY-10);
  line(cx-gapuraW/2+tiangW*0.66, baseY-tiangH+10, cx-gapuraW/2+tiangW*0.66, baseY-10);
  // Tiang kanan
  stroke(90, 40, 20, 220); strokeWeight(5);
  fill(170, 80, 50);
  rect(cx+gapuraW/2-tiangW, baseY-tiangH, tiangW, tiangH, 10);
  // Ornamen garis vertikal di tiang kanan
  stroke(220,180,120,120); strokeWeight(2);
  line(cx+gapuraW/2-tiangW*0.33, baseY-tiangH+10, cx+gapuraW/2-tiangW*0.33, baseY-10);
  line(cx+gapuraW/2-tiangW*0.66, baseY-tiangH+10, cx+gapuraW/2-tiangW*0.66, baseY-10);
  // Balok atas
  fill(220, 60, 60);
  stroke(120, 40, 40, 200); strokeWeight(4);
  rect(cx-gapuraW/2+tiangW-4, baseY-tiangH-32, gapuraW-tiangW*2+8, 28, 8);
  // Ornamen garis horizontal di balok atas
  stroke(255,220,120,120); strokeWeight(2);
  line(cx-gapuraW/2+tiangW, baseY-tiangH-20, cx+gapuraW/2-tiangW, baseY-tiangH-20);
  // Atap (merah, tebal, modern, melengkung)
  fill(230, 40, 40);
  stroke(120, 40, 40, 200); strokeWeight(6);
  beginShape();
  vertex(cx-gapuraW/2+18, baseY-tiangH-32);
  bezierVertex(cx-gapuraW/2+70, baseY-tiangH-68, cx+gapuraW/2-70, baseY-tiangH-68, cx+gapuraW/2-18, baseY-tiangH-32);
  vertex(cx+gapuraW/2-18, baseY-tiangH-32+atapH);
  bezierVertex(cx+gapuraW/2-60, baseY-tiangH-8, cx-gapuraW/2+60, baseY-tiangH-8, cx-gapuraW/2+18, baseY-tiangH-32+atapH);
  endShape(CLOSE);
  // Tulisan "Selamat Datang" besar, bold, dengan shadow, auto fit
  String txt = "Selamat Datang";
  textFont(fontTitle);
  textAlign(CENTER, CENTER);
  float maxW = gapuraW - 44;
  float fsize = 60;
  textSize(fsize);
  while (textWidth(txt) > maxW && fsize > 10) {
    fsize -= 1.5;
    textSize(fsize);
  }
  // Shadow
  fill(0, 120);
  text(txt, cx, baseY-tiangH-7+2);
  // Teks utama
  fill(255);
  text(txt, cx, baseY-tiangH-7);
}

// ==================== TREES ====================
void drawTrees() {
  // === Pohon Rindang Realistik & Rapi (Kiri Bawah) ===
  pushMatrix();
  translate(110, height - 20);
  scale(2.1);
  // Batang utama (bezier halus)
  stroke(80, 60, 30, 200); strokeWeight(10);
  noFill();
  bezier(0, 0, -8, -30, 10, -60, 0, -100);
  // Cabang kiri
  strokeWeight(6);
  bezier(0, -40, -18, -60, -18, -80, -8, -100);
  // Cabang kanan
  bezier(0, -60, 18, -80, 28, -100, 18, -120);
  // Kanopi daun (ellipse besar overlap, solid)
  noStroke();
  fill(40, 100, 60, 240);
  ellipse(0, -110, 90, 54); // utama
  ellipse(-30, -100, 54, 38);
  ellipse(30, -100, 54, 38);
  ellipse(-18, -128, 38, 28);
  ellipse(18, -128, 38, 28);
  ellipse(0, -140, 44, 24);
  popMatrix();

  // === Pohon Rindang Realistik & Rapi (Kanan Bawah) ===
  pushMatrix();
  translate(width - 110, height - 20);
  scale(2.1);
  // Batang utama (bezier halus)
  stroke(80, 60, 30, 200); strokeWeight(10);
  noFill();
  bezier(0, 0, -8, -30, 10, -60, 0, -100);
  // Cabang kiri
  strokeWeight(6);
  bezier(0, -40, -18, -60, -18, -80, -8, -100);
  // Cabang kanan
  bezier(0, -60, 18, -80, 28, -100, 18, -120);
  // Kanopi daun (ellipse besar overlap, solid)
  noStroke();
  fill(40, 100, 60, 240);
  ellipse(0, -110, 90, 54); // utama
  ellipse(-30, -100, 54, 38);
  ellipse(30, -100, 54, 38);
  ellipse(-18, -128, 38, 28);
  ellipse(18, -128, 38, 28);
  ellipse(0, -140, 44, 24);
  popMatrix();
}


// ==================== PROFESSIONAL CLOUDS ====================
void drawCloudsProfessional() {
  cloud1X += 0.4; if (cloud1X > width + 100) cloud1X = -100;
  cloud2X += 0.25; if (cloud2X > width + 120) cloud2X = -120;
  cloud3X += 0.18; if (cloud3X > width + 150) cloud3X = -150;
  drawCloudSoft(cloud1X, 120, 1.1, 60);
  drawCloudSoft(cloud2X, 80, 0.9, 40);
  drawCloudSoft(cloud3X, 180, 1.3, 80);
}

void drawCloudSoft(float x, float y, float scale, float blur) {
  // Soft cloud with blur effect (simulated by many transparent ellipses)
  for (int i = 0; i < 8; i++) {
    float ox = cos(TWO_PI*i/8.0) * 30 * scale;
    float oy = sin(TWO_PI*i/8.0) * 12 * scale;
    fill(255, 255, 255, 60);
    noStroke();
    ellipse(x+ox, y+oy, 70*scale+blur, 50*scale+blur*0.7);
  }
  fill(255, 255, 255, 200);
  ellipse(x, y, 80*scale, 60*scale);
  ellipse(x + 30*scale, y + 10*scale, 60*scale, 50*scale);
  ellipse(x - 30*scale, y + 10*scale, 60*scale, 50*scale);
  fill(255, 255, 255, 90);
  ellipse(x+10*scale, y-10*scale, 40*scale, 20*scale);
}

// ==================== BIRDS ====================
void drawBirds() {
  // 3 kelompok burung, tiap kelompok 3-4 burung
  for (int k = 0; k < 3; k++) {
    float baseX = (frameCount*0.7 + k*180) % (width+120) - 60;
    float baseY = 90 + k*38 + sin(frameCount*0.01 + k)*8;
    for (int i = 0; i < 3 + (k%2); i++) {
      float x = baseX + i*28 + sin(frameCount*0.03 + i + k)*7;
      float y = baseY + sin(frameCount*0.08 + i*0.7 + k)*8;
      drawBirdShape(x, y, 1.5 - k*0.22); // lebih besar
    }
  }
}

void drawBirdShape(float x, float y, float s) {
  noFill();
  stroke(40, 40, 40, 120);
  strokeWeight(2.7*s);
  float wing = 19*s;
  arc(x, y, wing, wing*0.7, radians(10), radians(160));
  arc(x, y, wing, wing*0.7, radians(20), radians(170));
}

// ==================== PROFESSIONAL CHARACTERS ====================
void drawCharactersProfessional() {
  // Bimo (kiri)
  float bimoY = height - 120 + sin(frameCount*0.05)*5;
  drawBimoProfessional(width*0.25, bimoY, 1.1);
  // Rara (kanan)
  float raraY = height - 120 + cos(frameCount*0.05)*5;
  drawRaraProfessional(width*0.75, raraY, 1.1);
}

void drawBimoProfessional(float x, float y, float s) {
  // Shadow
  fill(0, 60);
  ellipse(x, y+100*s, 60*s, 18*s);
  // Badan
  fill(70, 130, 200);
  stroke(40, 80, 120); strokeWeight(2.5);
  rect(x-25*s, y+40*s, 50*s, 60*s, 20*s);
  // Highlight badan
  noStroke(); fill(255,255,255,60);
  rect(x-10*s, y+45*s, 12*s, 40*s, 8*s);
  // Kepala
  fill(255, 220, 180);
  stroke(200, 170, 120); strokeWeight(2.5);
  ellipse(x, y, 80*s, 90*s);
  // Outline kepala
  noFill(); stroke(120, 90, 60, 80); strokeWeight(4);
  ellipse(x, y, 80*s+2, 90*s+2);
  // Ikat kepala (udeng) merah
  pushMatrix();
  translate(x, y-32*s);
  rotate(-0.08);
  fill(200, 40, 40);
  stroke(160, 20, 20); strokeWeight(2);
  arc(0, 0, 60*s, 22*s, PI, TWO_PI, OPEN);
  // Motif putih
  stroke(255,220,220); strokeWeight(1.2);
  for (int i=0; i<5; i++) {
    float px = -22*s + i*11*s;
    line(px, -2*s, px+4*s, 2*s);
  }
  popMatrix();
  // Highlight kepala
  noStroke(); fill(255, 255, 255, 80);
  ellipse(x-18*s, y-20*s, 22*s, 12*s);
  // Rambut
  fill(60, 40, 20);
  arc(x, y-20*s, 80*s, 60*s, PI, TWO_PI);
  // Mata
  fill(0);
  ellipse(x-18*s, y-5*s, 10*s, 10*s);
  ellipse(x+18*s, y-5*s, 10*s, 10*s);
  // Glossy mata
  fill(255,255,255,180);
  ellipse(x-16*s, y-7*s, 3.5*s, 2*s);
  ellipse(x+20*s, y-7*s, 3.5*s, 2*s);
  // Mulut
  noFill(); stroke(180, 80, 80); strokeWeight(3);
  arc(x, y+15*s, 30*s, 18*s, 0, PI);
  noStroke();
  // Tangan kiri melambai (rotasi besar di bahu)
  float wave = radians(30) + sin(frameCount*0.12 + x) * radians(35); // sudut 30° sampai 65°
  pushMatrix();
  translate(x-25*s, y+70*s); // sumbu rotasi di bahu kiri
  rotate(-wave);
  fill(255, 220, 180); stroke(200, 170, 120); strokeWeight(1.5);
  ellipse(0, 0, 20*s, 20*s);
  popMatrix();
  // Tangan kanan diam
  fill(255, 220, 180); stroke(200, 170, 120); strokeWeight(1.5);
  ellipse(x+35*s, y+60*s, 20*s, 20*s);
  noStroke();
}

void drawRaraProfessional(float x, float y, float s) {
  // Shadow
  fill(0, 60);
  ellipse(x, y+95*s, 54*s, 16*s);
  // Badan
  fill(230, 100, 160);
  stroke(160, 60, 120); strokeWeight(2.5);
  rect(x-22*s, y+38*s, 44*s, 56*s, 18*s);
  // Selendang kuning
  pushMatrix();
  translate(x-10*s, y+38*s);
  rotate(-0.3);
  fill(255, 220, 80, 220);
  noStroke();
  beginShape();
  vertex(0, 0);
  bezierVertex(10*s, 10*s, 18*s, 40*s, 8*s, 56*s);
  bezierVertex(2*s, 48*s, -2*s, 20*s, 0, 0);
  endShape(CLOSE);
  popMatrix();
  // Highlight badan
  noStroke(); fill(255,255,255,60);
  rect(x-8*s, y+43*s, 10*s, 36*s, 7*s);
  // Kepala
  fill(255, 230, 200);
  stroke(210, 180, 140); strokeWeight(2.5);
  ellipse(x, y, 78*s, 88*s);
  // Outline kepala
  noFill(); stroke(120, 90, 60, 80); strokeWeight(4);
  ellipse(x, y, 78*s+2, 88*s+2);
  // Highlight kepala
  noStroke(); fill(255, 255, 255, 80);
  ellipse(x-15*s, y-18*s, 18*s, 10*s);
  // Rambut
  fill(80, 50, 30);
  arc(x, y-18*s, 78*s, 60*s, PI, TWO_PI);
  // Mata
  fill(0);
  ellipse(x-16*s, y-4*s, 9*s, 9*s);
  ellipse(x+16*s, y-4*s, 9*s, 9*s);
  // Glossy mata
  fill(255,255,255,180);
  ellipse(x-14*s, y-6*s, 3*s, 1.7*s);
  ellipse(x+18*s, y-6*s, 3*s, 1.7*s);
  // Mulut
  noFill(); stroke(180, 80, 80); strokeWeight(2.5);
  arc(x, y+13*s, 26*s, 14*s, 0, PI);
  noStroke();
  // Tangan kanan melambai (rotasi besar di bahu)
  float wave = radians(30) + sin(frameCount*0.12 + x) * radians(35); // sudut 30° sampai 65°
  pushMatrix();
  translate(x+22*s, y+66*s); // sumbu rotasi di bahu kanan
  rotate(wave);
  fill(255, 230, 200); stroke(210, 180, 140); strokeWeight(1.5);
  ellipse(0, 0, 16*s, 16*s);
  popMatrix();
  // Tangan kiri diam
  fill(255, 230, 200); stroke(210, 180, 140); strokeWeight(1.5);
  ellipse(x-30*s, y+56*s, 16*s, 16*s);
  noStroke();
}

// ==================== SIMPLE ELEGANT TEXTS ====================
void drawTextsSimple() {
  // Fade in judul
  if (titleAlpha < 255) titleAlpha += titleFadeSpeed;
  if (titleAlpha > 255) titleAlpha = 255;

  // Judul: Shadow hitam + putih
  textFont(fontTitle);
  textAlign(CENTER, CENTER);

  // Bayangan hitam
  fill(0, 0, 0, titleAlpha); // Hitam transparan
  text("Mari Jelajahi Warisan Nusantara", width/2 + 2, 110 + 2);

  // Teks utama putih
  fill(255, 255, 255, titleAlpha);
  text("Mari Jelajahi Warisan Nusantara", width/2, 110);

  // Fade in subjudul
  if (titleAlpha > 180 && subAlpha < 255) subAlpha += subFadeSpeed;
  if (subAlpha > 255) subAlpha = 255;

  textFont(fontSub);

  // Bayangan hitam
  fill(0, 0, 0, subAlpha);
  text("bersama Bimo & Rara", width/2 + 2, 170 + 2);

  // Teks utama putih
  fill(255, 255, 255, subAlpha);
  text("bersama Bimo & Rara", width/2, 170);
}
